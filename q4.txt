#include<bits/stdc++.h>

using namespace std;
using   ll = long long;

#define fast ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);

#define pb              push_back
#define mp              make_pair
#define F               first
#define S               second
#define pii             pair<int , int>
#define int             long long int

#define ALL(v)          v.begin(),v.end()
#define ALLR(v)         v.rbegin(),v.rend()
#define pi              3.14159265358979323
#define inf             LLONG_MAX
#define ones(x)         __builtin_popcount(x)
#define fill(a,b)       memset(a,b,sizeof(a))
#define mod             1000000007

int mod_pow(int a,int b,int m)
{
    int res = 1;
    while(b)
    {
        if(b&1)
        {
            res = (res*a) % m;
        }
        a = (a*a) % m;
        b >>= 1;
    }
    return res;
}

int mod_inverse(int a , int m)
{
    return mod_pow(a , m - 2 , m);
}

void solve() {
	string s;
	
	int n;
	
	cin >> n;
	
	cin >> s;
	
	n = s.size();
	
	int end = n-1;
	
	int l = 0;
	int r = n-1;
	int tot = 0;
	
	vector< int > on;
	vector< int > lol;
	int cur = 0;
	
	while(l <= r) {
		int j = l;
		int len = 0;
		
		while(j <= r && s[j] == s[l]) {
			j++;
			len++;
		}
		
		if(len == 2) {
			tot++;
			l = j;
			continue;
		}
		
		if(len > 2) {
			int t1 = min(cur , len - 2);
			cur -= t1;
			tot += t1;
			len -= t1;
			if(len > 0) {
				tot++;
			}
			l = j;
		}
		else {
			cur++;
			l = j;
		}
	}
	
	tot += (cur+1)/2;
	
	cout << tot << endl;
	
}

signed main() {
    fast;

    int t = 1;

    cin >> t;

    while(t--) {
        solve();
    }

    return 0;
}
